{"ast":null,"code":"import _slicedToArray from \"/Users/dmitry/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _assertThisInitialized from \"/Users/dmitry/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/dmitry/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dmitry/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dmitry/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dmitry/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dmitry/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dmitry/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.value);\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board() {\n    _classCallCheck(this, Board);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Board).apply(this, arguments));\n  }\n\n  _createClass(Board, [{\n    key: \"renderSquare\",\n    value: function renderSquare(i) {\n      var _this = this;\n\n      var isWinnerSquare = false;\n\n      if (this.props.winnerSquareIds && this.props.winnerSquareIds.includes(i)) {\n        isWinnerSquare = true;\n      }\n\n      return React.createElement(Square, {\n        value: this.props.squares[i],\n        onClick: function onClick() {\n          return _this.props.onClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var board = [];\n\n      for (var i = 0; i < 3; ++i) {\n        var row = [];\n\n        for (var j = 0; j < 3; ++j) {\n          row.push(this.renderSquare(i * 3 + j));\n        }\n\n        board.push(React.createElement(\"div\", {\n          className: \"board-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, row));\n      }\n\n      return board;\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Game, _React$Component2);\n\n  function Game(props) {\n    var _this2;\n\n    _classCallCheck(this, Game);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this2.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        row: null,\n        col: null\n      }],\n      xIsNext: true,\n      stepNumber: 0,\n      reverseHistory: false\n    };\n    _this2.reverseHistory = _this2.reverseHistory.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(Game, [{\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var history = this.state.history.slice(0, this.state.stepNumber + 1);\n      var current = history[history.length - 1];\n      var squares = current.squares.slice();\n\n      var _getRowColById = getRowColById(i),\n          _getRowColById2 = _slicedToArray(_getRowColById, 2),\n          row = _getRowColById2[0],\n          col = _getRowColById2[1];\n\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        history: history.concat([{\n          squares: squares,\n          row: row,\n          col: col\n        }]),\n        xIsNext: !this.state.xIsNext,\n        stepNumber: history.length\n      });\n    }\n  }, {\n    key: \"jumpTo\",\n    value: function jumpTo(step) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: step % 2 === 0\n      });\n    }\n  }, {\n    key: \"reverseHistory\",\n    value: function reverseHistory() {\n      this.setState({\n        reverseHistory: !this.state.reverseHistory\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var reverseHistory = this.state.reverseHistory;\n      var history = this.state.history;\n      var current = history[this.state.stepNumber];\n      var winner = calculateWinner(current.squares);\n      var winnerSquares = getWinnerSquares(current.squares);\n      var steps = reverseHistory ? history.slice().reverse() : history;\n      var moves = steps.map(function (step, index, array) {\n        var move = _this3.state.reverseHistory ? array.length - index - 1 : index;\n        var desc = move ? \"Go to move #\".concat(move, \", (\").concat(step.row + 1, \", \").concat(step.col + 1, \")\") : 'Go to game start';\n\n        if (_this3.state.stepNumber === move) {\n          desc = React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, desc);\n        }\n\n        return React.createElement(\"li\", {\n          key: move,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this3.jumpTo(move);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, desc));\n      }, this);\n      var status;\n\n      if (winner) {\n        status = 'Winner: ' + winner;\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Board, {\n        squares: current.squares,\n        onClick: function onClick(i) {\n          return _this3.handleClick(i);\n        },\n        winnerSquareIds: winnerSquares,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, status), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.reverseHistory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Reverse History\")), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, moves)));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nfunction getWinnerSquares(squares) {\n  var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < lines.length; i++) {\n    var _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [a, b, c];\n    }\n  }\n\n  return null;\n}\n\nfunction getRowColById(i) {\n  var row = Math.floor(i / 3);\n  var col = i % 3;\n  return [row, col];\n}\n\nfunction calculateWinner(squares) {\n  var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < lines.length; i++) {\n    var _lines$i2 = _slicedToArray(lines[i], 3),\n        a = _lines$i2[0],\n        b = _lines$i2[1],\n        c = _lines$i2[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 196\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/dmitry/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","i","isWinnerSquare","winnerSquareIds","includes","squares","board","row","j","push","renderSquare","Component","Game","state","history","Array","fill","col","xIsNext","stepNumber","reverseHistory","bind","slice","current","length","getRowColById","calculateWinner","setState","concat","step","winner","winnerSquares","getWinnerSquares","steps","reverse","moves","map","index","array","move","desc","jumpTo","status","handleClick","lines","a","b","c","Math","floor","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    let isWinnerSquare = false;\n    if (this.props.winnerSquareIds && this.props.winnerSquareIds.includes(i)) {\n      isWinnerSquare = true;\n    }\n    return (\n      <Square\n        value={this.props.squares[i]} \n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    const board = [];\n    for (let i = 0; i < 3; ++i) {\n      const row = [];\n      for (let j = 0; j < 3; ++j) {\n        row.push(this.renderSquare(i*3+j));\n      }\n      board.push(<div className=\"board-row\">{row}</div>);\n    }\n    return board;\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        row: null,\n        col: null,\n      }],\n      xIsNext: true,\n      stepNumber: 0,\n      reverseHistory: false,\n    };\n\n    this.reverseHistory = this.reverseHistory.bind(this);\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    const [row, col] = getRowColById(i);\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        row: row,\n        col: col,\n      }]),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    })\n  }\n\n  reverseHistory() {\n    this.setState({\n      reverseHistory: !this.state.reverseHistory,\n    });\n  }\n\n  render() {\n    const reverseHistory = this.state.reverseHistory;\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const winnerSquares = getWinnerSquares(current.squares);\n\n    const steps = reverseHistory ? history.slice().reverse() : history;\n    const moves = steps.map((step, index, array) => {\n      const move = this.state.reverseHistory ? (array.length - index - 1) : index;\n      let desc = move ? `Go to move #${move}, (${step.row+1}, ${step.col+1})` : 'Go to game start';\n      if (this.state.stepNumber === move) {\n        desc = <b>{desc}</b>;\n      }\n\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n      \n    }, this);\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n            winnerSquareIds={winnerSquares}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <div>\n            <button onClick={this.reverseHistory}>\n              Reverse History\n            </button>\n          </div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction getWinnerSquares(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [a, b, c];\n    }\n  }\n  return null;\n}\n\nfunction getRowColById(i) {\n  const row = Math.floor(i / 3);\n  const col = i % 3;\n  return [row, col];\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}